package com.yw.ffmpegj.libsws;


import com.sun.jna.Structure;
import com.sun.jna.ptr.DoubleByReference;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class SwsVector extends Structure {
	/**
	 * < pointer to the list of coefficients<br>
	 * C type : double*
	 */
	public DoubleByReference coeff;
	/** < number of coefficients in the vector */
	public int length;
	public SwsVector() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("coeff", "length");
	}
	/**
	 * @param coeff < pointer to the list of coefficients<br>
	 * C type : double*<br>
	 * @param length < number of coefficients in the vector
	 */
	public SwsVector(DoubleByReference coeff, int length) {
		super();
		this.coeff = coeff;
		this.length = length;
	}
	public static class ByReference extends SwsVector implements Structure.ByReference {
		
	};
	public static class ByValue extends SwsVector implements Structure.ByValue {
		
	};
}
