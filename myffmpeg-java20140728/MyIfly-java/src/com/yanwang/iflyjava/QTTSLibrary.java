package com.yanwang.iflyjava;


import com.sun.jna.Callback;
import com.sun.jna.Library;
import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import com.sun.jna.Pointer;
import com.sun.jna.ptr.IntByReference;
import java.nio.ByteBuffer;
import java.nio.IntBuffer;
/**
 * JNA Wrapper for library <b>qtts</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public interface QTTSLibrary extends Library {
	/*public static final String JNA_LIBRARY_NAME = "qtts";
	public static final NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(QTTSLibrary.JNA_LIBRARY_NAME);
	public static final QTTSLibrary INSTANCE = (QTTSLibrary)Native.loadLibrary(QTTSLibrary.JNA_LIBRARY_NAME, QTTSLibrary.class);*/
	public interface Proc_QTTSSessionBegin extends Callback {
		Pointer apply(Pointer params, IntByReference errorCode);
	};
	public interface Proc_QTTSTextPut extends Callback {
		int apply(Pointer sessionID, Pointer textString, int textLen, Pointer params);
	};
	public interface Proc_QTTSAudioGet extends Callback {
		Pointer apply(Pointer sessionID, IntByReference audioLen, IntByReference synthStatus, IntByReference errorCode);
	};
	public interface Proc_QTTSAudioInfo extends Callback {
		Pointer apply(Pointer sessionID);
	};
	public interface Proc_QTTSSessionEnd extends Callback {
		int apply(Pointer sessionID, Pointer hints);
	};
	public interface Proc_QTTSGetParam extends Callback {
		int apply(Pointer sessionID, Pointer paramName, Pointer paramValue, IntByReference valueLen);
	};
	public interface Proc_QTTSSetParam extends Callback {
		int apply(Pointer sessionID, Pointer paramName, Pointer paramValue);
	};
	
	String QTTSSessionBegin(String params, IntByReference errorCode);
	
	
	int QTTSTextPut(String sessionID, String textString, int textLen, String params);
	int QTTSTextPut(String sessionID, byte[] textString, int textLen, String params);
	
	Pointer QTTSAudioGet(String sessionID, IntByReference audioLen, IntByReference synthStatus, IntByReference errorCode);
	
	
	String QTTSAudioInfo(String sessionID);
	
	int QTTSSessionEnd(String sessionID, String hints);
	@Deprecated 
	int QTTSGetParam(Pointer sessionID, Pointer paramName, Pointer paramValue, IntByReference valueLen);
	int QTTSGetParam(String sessionID, String paramName, ByteBuffer paramValue, IntBuffer valueLen);
	@Deprecated 
	int QTTSSetParam(Pointer sessionID, Pointer paramName, Pointer paramValue);
	int QTTSSetParam(String sessionID, String paramName, String paramValue);
}

