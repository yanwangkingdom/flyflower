package com.yanwang.iflyjava;


import com.sun.jna.Callback;
import com.sun.jna.Library;
import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import com.sun.jna.Pointer;
import com.sun.jna.PointerType;
import com.sun.jna.ptr.IntByReference;
/**
 * JNA Wrapper for library <b>msp_cmn</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public interface Msp_cmnLibrary extends Library {
	/*public static final String JNA_LIBRARY_NAME = "msp_cmn";
	public static final NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(Msp_cmnLibrary.JNA_LIBRARY_NAME);
	public static final Msp_cmnLibrary INSTANCE = (Msp_cmnLibrary)Native.loadLibrary(Msp_cmnLibrary.JNA_LIBRARY_NAME, Msp_cmnLibrary.class);*/
	
	public interface Proc_MSPLogin extends Callback {
		int apply(Pointer usr, Pointer pwd, Pointer params);
	};
	public interface Proc_MSPLogout extends Callback {
		int apply();
	};
	public interface Proc_MSPUpload extends Callback {
		int apply(Pointer dataName, Pointer params, Pointer dataID);
	};
	public interface Proc_MSPDownload extends Callback {
		int apply(Pointer params, Pointer dataID);
	};
	public interface Proc_MSPNlpSearch extends Callback {
		int apply(Pointer params, Pointer text, int textLen);
	};
	public interface Proc_MSPAppendData extends Callback {
		int apply(Pointer data, int dataLen, int dataStatus);
	};
	public interface Proc_MSPGetResult extends Callback {
		Pointer apply(IntByReference rsltLen, IntByReference rsltStatus, IntByReference errorCode);
	};
	public interface Proc_MSPSetParam extends Callback {
		int apply(Pointer paramName, Pointer paramValue);
	};
	public interface Proc_MSPGetParam extends Callback {
		int apply(Pointer paramName, Pointer paramValue, IntByReference valueLen);
	};
	public interface Proc_MSPUploadData extends Callback {
		Pointer apply(Pointer dataName, Pointer data, int dataLen, Pointer params, IntByReference errorCode);
	};
	public interface Proc_MSPDownloadData extends Callback {
		Pointer apply(Pointer params, IntByReference dataLen, IntByReference errorCode);
	};
	public interface Proc_MSPSearch extends Callback {
		Pointer apply(Pointer params, Pointer text, IntByReference dataLen, IntByReference errorCode);
	};
	public interface msp_status_ntf_handler extends Callback {
		void apply(int type, int status, int param1, Pointer param2, Pointer userData);
	};
	public interface Proc_MSPRegisterNotify extends Callback {
		Pointer apply(QisrLibrary.msp_status_ntf_handler statusCb, Pointer userData);
	};
	
	int MSPLogin(String usr, String pwd, String params);
	int MSPLogout();
	@Deprecated 
	int MSPUpload(Pointer dataName, Pointer params, Pointer dataID);
	int MSPUpload(String dataName, String params, String dataID);
	@Deprecated 
	int MSPDownload(Pointer params, Pointer dataID);
	int MSPDownload(String params, String dataID);
	@Deprecated 
	int MSPNlpSearch(Pointer params, Pointer text, int textLen);
	int MSPNlpSearch(String params, String text, int textLen);
	int MSPAppendData(Pointer data, int dataLen, int dataStatus);
	@Deprecated 
	Pointer MSPGetResult(IntByReference rsltLen, IntByReference rsltStatus, IntByReference errorCode);
	//Pointer MSPGetResult(IntBuffer rsltLen, IntBuffer rsltStatus, IntBuffer errorCode);
	@Deprecated 
	int MSPSetParam(Pointer paramName, Pointer paramValue);
	int MSPSetParam(String paramName, String paramValue);
	@Deprecated 
	int MSPGetParam(Pointer paramName, Pointer paramValue, IntByReference valueLen);
	//int MSPGetParam(String paramName, ByteBuffer paramValue, IntBuffer valueLen);
	
	String MSPUploadData(String dataName, byte[] data, int dataLen, String params, IntByReference errorCode);
	@Deprecated 
	Pointer MSPDownloadData(Pointer params, IntByReference dataLen, IntByReference errorCode);
	//Pointer MSPDownloadData(String params, IntBuffer dataLen, IntBuffer errorCode);
	@Deprecated 
	Pointer MSPSearch(Pointer params, Pointer text, IntByReference dataLen, IntByReference errorCode);
	//Pointer MSPSearch(String params, String text, IntBuffer dataLen, IntBuffer errorCode);
	int MSPRegisterNotify(QisrLibrary.msp_status_ntf_handler statusCb, Pointer userData);
}


